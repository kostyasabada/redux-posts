{"version":3,"sources":["components/Post.jsx","components/PostForm.jsx","redux/actions.js","redux/types.js","components/Posts.jsx","components/FetchedPosts.jsx","App.js","redux/appReducer.js","redux/rootReducer.js","redux/postsReducer.js","index.js"],"names":["Post","post","className","title","PostForm","useState","setTitle","dispatch","useDispatch","onSubmit","event","preventDefault","trim","newPost","id","Date","now","toString","type","payload","htmlFor","value","onChange","target","Posts","posts","useSelector","state","length","map","key","FetchedPosts","fetchedPosts","loading","app","role","onClick","a","fetch","response","json","console","log","setTimeout","App","activeClassName","to","exact","path","initialState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8cf24be.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Post = ({ post }) => (\n  <div className=\"card\">\n    <div className=\"card-body\">\n      <h5 className=\"card-title\">\n        {post.title}\n      </h5>\n    </div>\n  </div>\n);\n\nPost.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createPost } from '../redux/actions';\n\nexport const PostForm = () => {\n  const [title, setTitle] = useState('');\n  const dispatch = useDispatch();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    if (!title.trim()) {\n      return;\n    }\n    const newPost = {\n      title,\n      id: Date.now().toString(),\n    };\n\n    dispatch(createPost(newPost));\n\n    setTitle('');\n  };\n\n  return (\n    <form\n      onSubmit={submitHandler}\n    >\n      <div className=\"form-group\">\n        <label htmlFor=\"title\">Post title</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"title\"\n          value={title}\n          onChange={(event) => {\n            setTitle(event.target.value);\n          }}\n        />\n      </div>\n      <button\n        className=\"btn btn-success\"\n        type=\"submit\"\n      >\n        Create\n      </button>\n    </form>\n  );\n};\n","import { CREATE_POST, FETCH_POST, HIDE_LOADER, SHOW_LOADER } from \"./types\";\n\nexport function createPost(post) {\n  return {\n    type: CREATE_POST,\n    payload: post\n  }\n}\n\nexport function fetchPosts() {\n  return async dispatch => {\n    dispatch(showLoader());\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n    const json = await response.json();\n    console.log(json);\n    setTimeout(() => {\n      dispatch({\n        type: FETCH_POST,\n        payload: json,\n      });\n      dispatch(hideLoader());\n    }, 500)\n  }\n}\n\nexport function showLoader() {\n  return {\n    type: SHOW_LOADER\n  }\n}\n\nexport function hideLoader() {\n  return {\n    type: HIDE_LOADER\n  }\n}\n","export const CREATE_POST = 'POST/CREATE_POST';\nexport const FETCH_POST = 'FETCH/FETCH_POST';\nexport const SHOW_LOADER = 'APP/SHOW_LOADER';\nexport const HIDE_LOADER = 'APP/HIDE_LOADER';\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Post } from './Post';\nimport { PostForm } from './PostForm';\n\nexport const Posts = () => {\n  const posts = useSelector((state) => state.posts);\n\n  return (\n    <>\n      <div className=\"container pt-3\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <PostForm />\n          </div>\n        </div>\n\n        {(!posts.length)\n        && (<p className=\"text-center\">No posts</p>)}\n        <div>\n          {posts.map((post) => (\n            <Post\n              key={post.id}\n              post={post}\n            />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPosts } from '../redux/actions';\nimport { Post } from './Post';\n\nexport const FetchedPosts = () => {\n  const dispatch = useDispatch();\n  const posts = useSelector((state) => state.fetchedPosts);\n  const loading = useSelector((state) => state.app.loading);\n\n  return (\n    <>\n      <div className=\"container pt-3\">\n        <div className=\"row\">\n          <div className=\"col\">\n\n            {loading && (\n            <div\n              className=\"spinner-border text-warning\"\n              role=\"status\"\n            >\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n            )}\n            {(!posts.length && !loading)\n        && (\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={() => dispatch(fetchPosts())}\n        >\n          Load\n        </button>\n        )}\n            <div>\n              {posts.map((post) => (\n                <Post\n                  key={post.id}\n                  post={post}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { NavLink, Route, Switch } from 'react-router-dom';\nimport { Posts } from './components/Posts';\nimport { FetchedPosts } from './components/FetchedPosts';\n\nfunction App() {\n  return (\n    <>\n      <ul className=\"nav\">\n        <li className=\"nav-item\">\n          <NavLink\n            className=\"nav-link\"\n            activeClassName=\"nav-link active\"\n            to=\"\"\n            exact\n          >\n            Home\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink\n            className=\"nav-link\"\n            activeClassName=\"nav-link active\"\n            to=\"/posts\"\n            exact\n          >\n            Posts\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink\n            className=\"nav-link\"\n            activeClassName=\"active\"\n            to=\"/fetchedposts\"\n            exact\n          >\n            Fetched Posts\n          </NavLink>\n        </li>\n      </ul>\n\n      <Switch>\n        <Route\n          path=\"/posts\"\n        >\n          <Posts />\n        </Route>\n        <Route\n          path=\"/fetchedposts\"\n        >\n          <FetchedPosts />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import { HIDE_LOADER, SHOW_LOADER } from \"./types\";\n\nconst initialState = {\n  loading: false\n}\n\nexport const appReducer = ( state = initialState, action) => {\n  switch(action.type){\n    case SHOW_LOADER:\n      return {\n        ...state,\n        loading: true\n      }\n      case HIDE_LOADER:\n        return  {\n          ...state,\n          loading: false\n        }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { fetchedPostsReducer, postsReducer } from './postsReducer';\nimport { appReducer } from './appReducer';\n\nexport const rootReducer = combineReducers({\n  posts: postsReducer,\n  fetchedPosts: fetchedPostsReducer,\n  app: appReducer,\n});\n","import { CREATE_POST, FETCH_POST } from './types';\n\nexport const postsReducer = (state = [], action) => {\n  switch (action.type) {\n    case CREATE_POST:\n      return [\n        ...state,\n        action.payload,\n      ];\n    default: return state;\n  }\n};\n\nexport const fetchedPostsReducer = (state = [], action) => {\n  switch (action.type) {\n    case FETCH_POST:\n      return action.payload;\n    default: return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport { rootReducer } from './redux/rootReducer';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}